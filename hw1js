1. 'number' + 3 + 3//  Операція виконується зліва направо. Спочатку відбувається конкатенація 'number' + 3 -> "number3", а потім додається ще один 3 -> "number33".

2. null + 3// null приводиться до 0. 0 + 3 -> 3.

3. 5 && "qwerty"//Оператор && повертає перше хибне значення або останнє істинне. 5 є істинним, тому повертається "qwerty".

4. +'40' + +'2' + "hillel"// Унарний плюс перетворює '40' на число 40 і '2' на 2. Сума 40 + 2 -> 42. Потім виконується конкатенація з "hillel" -> "42hillel".

5. '10' - 5 === 6//'10' приводиться до числа 10. 10 - 5 -> 5. Порівняння 5 === 6 -> true.

6. true + false// true приводиться до 1, а false до 0. 1 + 0 -> 1.

7. '4px' - 3// '4px' не може бути перетворено в число, тому результат - NaN.

8. '4' - 3// '4' приводиться до числа 4. 4 - 3 -> 1.

9. '6' + 3 ** 0//Спочатку виконується піднесення до степеня: 3 ** 0 -> 1. Потім виконується конкатенація '6' + 1 -> "61".

10. 12 / '6'//'6' приводиться до числа 6. 12 / 6 -> 2.

11. '10' + (5 === 6)// Порівняння 5 === 6 -> false. Потім виконується конкатенація '10' + false -> "10false".

12. null == '' //null не дорівнює порожньому рядку.

13. 3 ** (9 / 3)// 9 / 3 -> 3. Потім 3 ** 3 -> 27.

14. !!'false' == !!'true'// !! перетворює будь-яке значення в булеве. Будь-який непорожній рядок вважається істинним, тому обидва вирази дають true.

15. 0 || '0' && 1//Оператор && має вищий пріоритет, тому спочатку '0' && 1 -> 1. Потім 0 || 1 -> 1.

16. (+null == false) < 1//+null приводить null до 0. 0 == false -> true. Порівняння true < 1 -> false.

17. false && true || true// Оператор && має вищий пріоритет. false && true -> false. Потім false || true -> true.

18. false && (false || true)// Спочатку виконується false || true -> true. Потім false && true -> false.

19. (+null == false) < 1 ** 5// +null приводиться до 0. 0 == false -> true. Потім 1 ** 5 -> 1. Порівняння true < 1 -> false.
